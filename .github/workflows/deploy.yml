name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - feat/deploy-frontend-aws

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm install

      - name: Run Lint
        run: npm run lint

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_TAG }}
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ubuntu
        run: |
          # Create SSH directory and set permissions
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add EC2 host to known_hosts to prevent interactive prompts
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            set -e

            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_TAG }}:latest

            # Stop and remove any existing container
            docker stop stayhub || true
            docker rm stayhub || true

            # Run the new container
            docker run -d --name stayhub -p 8081:80 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_TAG }}:latest

            # Clean up dangling images
            docker image prune -f
          EOF
